Running tool: /usr/bin/go test -timeout 60s -run ^(TestBasicAgree2B)$

2020/06/10 17:02:36 [0] Starts off
2020/06/10 17:02:36 [1] Starts off
2020/06/10 17:02:36 [0] waiting to be notified
2020/06/10 17:02:36 [2] Starts off
Test (2B): basic agreement ...
2020/06/10 17:02:36 [2] waiting to be notified
2020/06/10 17:02:36 [1] waiting to be notified
2020/06/10 17:02:37 [0] becomes candidate, rf.currentTerm = 1, [{<nil> 0}]
2020/06/10 17:02:37 [1] receives RequestVote from [0]
2020/06/10 17:02:37     votes for [0] in term 1
2020/06/10 17:02:37     resets election timer for granting vote
2020/06/10 17:02:37 [2] receives RequestVote from [0]
2020/06/10 17:02:37     votes for [0] in term 1
2020/06/10 17:02:37     resets election timer for granting vote
2020/06/10 17:02:37 [0] receives vote from [1]
2020/06/10 17:02:37 [0] elected as LEADER in term 1!
2020/06/10 17:02:37     [{<nil> 0}]
2020/06/10 17:02:37     immediately sends heartbeats to peers
2020/06/10 17:02:37 [0] sends AppendEntries to [1]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:0 PrevLogTerm:0 Entries:[] LeaderCommit:0}
2020/06/10 17:02:37 [0] sends AppendEntries to [2]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:0 PrevLogTerm:0 Entries:[] LeaderCommit:0}
2020/06/10 17:02:37 [0] receives vote from [2]
2020/06/10 17:02:37 [0] receives command 100 from client, currentTerm = 1
2020/06/10 17:02:37     [{<nil> 0} {100 1}]
2020/06/10 17:02:37 [TEST] 100 starts on [2], index = 1
2020/06/10 17:02:37 [2] receives AppendEntries from [0]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:0 PrevLogTerm:0 Entries:[] LeaderCommit:0}
2020/06/10 17:02:37     Current log: [{<nil> 0}]
2020/06/10 17:02:37     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:37     replies True: log entry matches
2020/06/10 17:02:37     appendStart: -1, rf.log: [{<nil> 0}]
2020/06/10 17:02:37     Updated log: [{<nil> 0}]
2020/06/10 17:02:37 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:37     Original: nextIndex: 1, matchIndex: 0
2020/06/10 17:02:37     Updated: nextIndex: 1, matchIndex: 0
2020/06/10 17:02:37 1-th entry is NOT replicated on [1]
2020/06/10 17:02:37 1-th entry is NOT replicated on [2]
2020/06/10 17:02:37 [1] receives AppendEntries from [0]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:0 PrevLogTerm:0 Entries:[] LeaderCommit:0}
2020/06/10 17:02:37     Current log: [{<nil> 0}]
2020/06/10 17:02:37     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:37     replies True: log entry matches
2020/06/10 17:02:37     appendStart: -1, rf.log: [{<nil> 0}]
2020/06/10 17:02:37     Updated log: [{<nil> 0}]
2020/06/10 17:02:37 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:37     Original: nextIndex: 1, matchIndex: 0
2020/06/10 17:02:37     Updated: nextIndex: 1, matchIndex: 0
2020/06/10 17:02:37 1-th entry is NOT replicated on [1]
2020/06/10 17:02:37 1-th entry is NOT replicated on [2]
2020/06/10 17:02:37 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:37 [0] sends AppendEntries to [1]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:0 PrevLogTerm:0 Entries:[{Command:100 Term:1}] LeaderCommit:0}
2020/06/10 17:02:37 [0] sends AppendEntries to [2]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:0 PrevLogTerm:0 Entries:[{Command:100 Term:1}] LeaderCommit:0}
2020/06/10 17:02:37 [2] receives AppendEntries from [0]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:0 PrevLogTerm:0 Entries:[{Command:100 Term:1}] LeaderCommit:0}
2020/06/10 17:02:37     Current log: [{<nil> 0}]
2020/06/10 17:02:37     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:37     replies True: log entry matches
2020/06/10 17:02:37     appendStart: 0, rf.log: [{<nil> 0}]
2020/06/10 17:02:37     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37 [1] receives AppendEntries from [0]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:0 PrevLogTerm:0 Entries:[{Command:100 Term:1}] LeaderCommit:0}
2020/06/10 17:02:37     Current log: [{<nil> 0}]
2020/06/10 17:02:37     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:37     replies True: log entry matches
2020/06/10 17:02:37     appendStart: 0, rf.log: [{<nil> 0}]
2020/06/10 17:02:37     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:37     Original: nextIndex: 1, matchIndex: 0
2020/06/10 17:02:37     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:37 1-th entry is NOT replicated on [1]
2020/06/10 17:02:37 1-th entry is replicated on [2]
2020/06/10 17:02:37 [0] commits 100
2020/06/10 17:02:37 [0] tries to notify apply
2020/06/10 17:02:37 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:37     Original: nextIndex: 1, matchIndex: 0
2020/06/10 17:02:37     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:37 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:37 [0] sends AppendEntries to [1]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:37 [0] sends AppendEntries to [2]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:37 [2] receives AppendEntries from [0]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:37 [1] receives AppendEntries from [0]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:37     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:37     replies True: log entry matches
2020/06/10 17:02:37     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     (follower) updates commitIndex to 1
2020/06/10 17:02:37 [1] tries to notify apply
2020/06/10 17:02:37     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:37     replies True: log entry matches
2020/06/10 17:02:37     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     (follower) updates commitIndex to 1
2020/06/10 17:02:37 [2] tries to notify apply
2020/06/10 17:02:37 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:37 [0] sends AppendEntries to [1]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:37 [0] sends AppendEntries to [2]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:37 [2] receives AppendEntries from [0]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:37     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:37     replies True: log entry matches
2020/06/10 17:02:37     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:37     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:37     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:37 [1] receives AppendEntries from [0]
2020/06/10 17:02:37     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:37     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:37     replies True: log entry matches
2020/06/10 17:02:37     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:37 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:37     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:37     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:38 [0] sends AppendEntries to [1]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [0] sends AppendEntries to [2]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [2] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [1] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:38 [0] sends AppendEntries to [1]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [0] sends AppendEntries to [2]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [1] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [2] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:38 [0] sends AppendEntries to [1]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [0] sends AppendEntries to [2]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [2] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [1] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:38 [0] sends AppendEntries to [1]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [0] sends AppendEntries to [2]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [1] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [2] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:38 [0] sends AppendEntries to [1]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [0] sends AppendEntries to [2]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38 [2] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38 [1] receives AppendEntries from [0]
2020/06/10 17:02:38     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:38     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:38     replies True: log entry matches
2020/06/10 17:02:38     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:38 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:38     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:38     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:39 [0] tries to send periodic AppendEntries to peers
2020/06/10 17:02:39 [0] sends AppendEntries to [1]
2020/06/10 17:02:39     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:39 [0] sends AppendEntries to [2]
2020/06/10 17:02:39     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:39 [2] receives AppendEntries from [0]
2020/06/10 17:02:39     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:39     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:39     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:39     replies True: log entry matches
2020/06/10 17:02:39     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:39     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:39 [1] receives AppendEntries from [0]
2020/06/10 17:02:39     {Term:1 LeaderID:0 PrevLogIndex:1 PrevLogTerm:1 Entries:[] LeaderCommit:1}
2020/06/10 17:02:39     Current log: [{<nil> 0} {100 1}]
2020/06/10 17:02:39     resets election timer as receiving AppendEntries from leader
2020/06/10 17:02:39     replies True: log entry matches
2020/06/10 17:02:39     appendStart: -1, rf.log: [{<nil> 0} {100 1}]
2020/06/10 17:02:39     Updated log: [{<nil> 0} {100 1}]
2020/06/10 17:02:39 [0] receives SUCCESS AppendEntries from [2]
2020/06/10 17:02:39     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:39     Updated: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:39 [0] receives SUCCESS AppendEntries from [1]
2020/06/10 17:02:39     Original: nextIndex: 2, matchIndex: 1
2020/06/10 17:02:39     Updated: nextIndex: 2, matchIndex: 1
--- FAIL: TestBasicAgree2B (2.62s)
    config.go:477: one(100) failed to reach agreement
FAIL
exit status 1
FAIL	_/mnt/c/Users/yy0125/Desktop/6.824/src/raft	2.624s
